<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Gu√≠a de Vulnerabilidades - Registro</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
        .vulnerability { background: #f8f9fa; border-left: 4px solid #007bff; padding: 15px; margin: 15px 0; }
        .exploit { background: #fff3cd; border-left: 4px solid #ffc107; padding: 10px; margin: 10px 0; }
        .dangerous { background: #f8d7da; border-left: 4px solid #dc3545; padding: 10px; margin: 10px 0; }
        code { background: #e9ecef; padding: 2px 5px; border-radius: 3px; }
        pre { background: #f8f9fa; padding: 10px; border-radius: 5px; overflow-x: auto; }
    </style>
</head>
<body>

<h1>üéØ Vulnerabilidades en el Registro - Gu√≠a de Explotaci√≥n</h1>

<div class="vulnerability">
    <h2>üîê A02: Cryptographic Failures</h2>
    <p><strong>Descripci√≥n:</strong> Las contrase√±as se almacenan en texto plano sin ning√∫n tipo de cifrado.</p>
    
    <div class="exploit">
        <h3>‚úÖ C√≥mo probarlo:</h3>
        <ol>
            <li>Registra un usuario con cualquier contrase√±a</li>
            <li>Ve al panel de administraci√≥n (<code>admin.php</code>)</li>
            <li>Observa que tu contrase√±a aparece en texto plano</li>
        </ol>
        
        <p><strong>Ejemplo:</strong></p>
        <ul>
            <li>Usuario: <code>test123</code></li>
            <li>Contrase√±a: <code>mipassword</code></li>
        </ul>
        <p>La contrase√±a se guarda exactamente como "mipassword" en la base de datos.</p>
    </div>
</div>

<div class="vulnerability">
    <h2>üíâ A03: SQL Injection</h2>
    <p><strong>Descripci√≥n:</strong> Los campos de usuario y contrase√±a son vulnerables a inyecci√≥n SQL.</p>
    
    <div class="exploit">
        <h3>‚úÖ Pruebas b√°sicas:</h3>
        
        <h4>1. Inyecci√≥n en el campo Usuario:</h4>
        <ul>
            <li>Usuario: <code>test'); -- comentario</code></li>
            <li>Contrase√±a: <code>cualquiera</code></li>
        </ul>
        
        <h4>2. Romper la query con comillas:</h4>
        <ul>
            <li>Usuario: <code>test'</code></li>
            <li>Contrase√±a: <code>pass</code></li>
        </ul>
        <p>Esto deber√≠a mostrar un error de MySQL revelando la estructura de la query.</p>
    </div>
    
    <div class="dangerous">
        <h3>‚ö†Ô∏è Pruebas avanzadas (¬°Cuidado!):</h3>
        
        <h4>3. Insertar m√∫ltiples usuarios:</h4>
        <ul>
            <li>Usuario: <code>normal'), ('hacker', 'hacked</code></li>
            <li>Contrase√±a: <code>pass</code></li>
        </ul>
        <p>Esto insertar√° dos usuarios: "normal" y "hacker"</p>
        
        <h4>4. Intentar mostrar informaci√≥n de la base:</h4>
        <ul>
            <li>Usuario: <code>test'); SELECT * FROM users; --</code></li>
            <li>Contrase√±a: <code>cualquiera</code></li>
        </ul>
        
        <p><strong>Query resultante:</strong></p>
        <pre>INSERT INTO users (username, password) VALUES ('test'); SELECT * FROM users; --', 'cualquiera')</pre>
    </div>
</div>

<div class="vulnerability">
    <h2>‚öôÔ∏è A05: Security Misconfiguration</h2>
    <p><strong>Descripci√≥n:</strong> La aplicaci√≥n muestra errores detallados y informaci√≥n sensible.</p>
    
    <div class="exploit">
        <h3>‚úÖ C√≥mo verlo:</h3>
        <ol>
            <li>Intenta registrar un usuario que ya existe</li>
            <li>Usa caracteres especiales que rompan la query SQL</li>
            <li>Observa los errores detallados de MySQL que se muestran</li>
        </ol>
        
        <p><strong>Ejemplo:</strong></p>
        <ul>
            <li>Usuario: <code>admin</code> (que ya existe)</li>
            <li>Contrase√±a: <code>cualquiera</code></li>
        </ul>
        <p>Ver√°s el error completo de "Duplicate entry" con detalles de la base de datos.</p>
    </div>
</div>

<div class="vulnerability">
    <h2>üîë A07: Authentication Failures</h2>
    <p><strong>Descripci√≥n:</strong> Sin validaci√≥n de contrase√±as d√©biles y pol√≠ticas de seguridad.</p>
    
    <div class="exploit">
        <h3>‚úÖ Pruebas de contrase√±as d√©biles:</h3>
        
        <h4>1. Contrase√±as extremadamente cortas:</h4>
        <ul>
            <li>Usuario: <code>user1</code></li>
            <li>Contrase√±a: <code>1</code> (solo un car√°cter)</li>
        </ul>
        
        <h4>2. Contrase√±as comunes:</h4>
        <ul>
            <li>Contrase√±a: <code>123</code></li>
            <li>Contrase√±a: <code>password</code></li>
            <li>Contrase√±a: <code>admin</code></li>
            <li>Contrase√±a: <code>qwerty</code></li>
        </ul>
        
        <h4>3. Contrase√±as vac√≠as o espacios:</h4>
        <ul>
            <li>Usuario: <code>test</code></li>
            <li>Contrase√±a: <code>   </code> (solo espacios)</li>
        </ul>
    </div>
</div>

<h2>üß™ Ejercicios Pr√°cticos</h2>

<div class="exploit">
    <h3>Nivel Principiante:</h3>
    <ol>
        <li>Registra un usuario con contrase√±a de 1 car√°cter</li>
        <li>Intenta registrar el usuario "admin" (que ya existe) para ver errores</li>
        <li>Registra y luego ve al panel admin para ver tu contrase√±a en texto plano</li>
    </ol>
</div>

<div class="exploit">
    <h3>Nivel Intermedio:</h3>
    <ol>
        <li>Usa comillas simples en el nombre de usuario para romper la SQL</li>
        <li>Intenta insertar m√∫ltiples usuarios con una sola operaci√≥n</li>
        <li>Registra usuarios con nombres que contengan c√≥digo HTML/JavaScript</li>
    </ol>
</div>

<div class="dangerous">
    <h3>Nivel Avanzado:</h3>
    <ol>
        <li>Intenta hacer SQL injection para extraer informaci√≥n de otras tablas</li>
        <li>Experimenta con diferentes payloads de SQL injection</li>
        <li>Combina m√∫ltiples vulnerabilidades en una sola petici√≥n</li>
    </ol>
</div>

<h2>üõ°Ô∏è ¬øC√≥mo se deber√≠a corregir?</h2>

<div class="vulnerability">
    <h3>Soluciones correctas:</h3>
    <ul>
        <li><strong>A02:</strong> Usar <code>password_hash()</code> y <code>password_verify()</code></li>
        <li><strong>A03:</strong> Usar prepared statements con par√°metros</li>
        <li><strong>A05:</strong> No mostrar errores detallados en producci√≥n</li>
        <li><strong>A07:</strong> Implementar pol√≠ticas de contrase√±as fuertes</li>
    </ul>
</div>

<p><a href="register.php">‚Üê Volver al registro</a> | <a href="login.php">Ir al login</a> | <a href="index.php">üè† Volver al inicio</a></p>

</body>
</html>
